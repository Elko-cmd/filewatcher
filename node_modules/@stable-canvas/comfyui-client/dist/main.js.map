{"version":3,"file":"main.js","sources":["../node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js","../src/misc.ts","../src/ComfyUIWsClient.ts","../src/CachedFn.ts","../src/ComfyUIApiClient.ts","../src/InvokedWorkflow.ts","../src/ComfyUIWorkflow.ts","../src/ClientPlugin.ts","../src/plugins/LoginAuthPlugin.ts"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","export const uuidv4 = () =>\r\n  \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\r\n    const r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n\r\nexport const isNone = (x: any): x is null | undefined =>\r\n  x === null || x === undefined;\r\n","import { IComfyApiConfig } from \"./types\";\r\nimport { EventEmitter } from \"eventemitter3\";\r\nimport { ComfyUiWsTypes } from \"./ws.typs\";\r\nimport { uuidv4 } from \"./misc\";\r\n\r\ntype ComfyUIClientEvents = {\r\n  status: [ComfyUiWsTypes.Messages.Status[\"status\"] | null];\r\n  progress: [ComfyUiWsTypes.Messages.Progress];\r\n  executing: [ComfyUiWsTypes.Messages.Executing];\r\n  executed: [ComfyUiWsTypes.Messages.Executed];\r\n  execution_interrupted: [ComfyUiWsTypes.Messages.ExecutionInterrupted];\r\n\r\n  // this group events\r\n  execution_start: any;\r\n  execution_error: any;\r\n  execution_cached: any;\r\n\r\n  // this web client events\r\n  reconnected: any;\r\n  reconnecting: any;\r\n\r\n  /**\r\n   * load image data from websocket\r\n   */\r\n  image_data: [ArrayBuffer];\r\n\r\n  /**\r\n   * get all messages\r\n   */\r\n  message: any;\r\n\r\n  /**\r\n   * close client\r\n   */\r\n  close: any;\r\n\r\n  /**\r\n   * unhandled event message\r\n   */\r\n  unhandled: [{ type: string; data: any }];\r\n};\r\n\r\n/**\r\n * A client for interacting with the ComfyUI API server using WebSockets.\r\n *\r\n * NOTE: CORS policy: Request header field comfy-user is not allowed by Access-Control-Allow-Headers in preflight response. Please config.use empty string in browser.\r\n *\r\n * @example\r\n * ```typescript\r\n * const client = new ComfyUIWsClient({\r\n *  api_host: \"YOUR_API_HOST\"\r\n * });\r\n *\r\n * // Connect to the server\r\n * client.connect();\r\n *\r\n * // Listen for status updates\r\n * client.on(\"status\", (status) => {\r\n *   console.log(\"Status:\", status);\r\n * });\r\n *\r\n * // when done, close the client\r\n * client.close();\r\n */\r\nexport class ComfyUIWsClient {\r\n  static DEFAULT_API_HOST = \"127.0.0.1:8188\";\r\n  static DEFAULT_API_BASE = \"\";\r\n  static DEFAULT_USER = \"\";\r\n  static IS_BROWSER = typeof window !== \"undefined\";\r\n\r\n  static loadImageData(buf: ArrayBuffer) {\r\n    const view = new DataView(buf);\r\n    const eventType = view.getUint32(0);\r\n    switch (eventType) {\r\n      case 1:\r\n        const view2 = new DataView(buf);\r\n        const imageType = view2.getUint32(0);\r\n        let imageMime;\r\n        switch (imageType) {\r\n          case 1:\r\n          default:\r\n            imageMime = \"image/jpeg\";\r\n            break;\r\n          case 2:\r\n            imageMime = \"image/png\";\r\n        }\r\n        const image_buffer = buf.slice(8);\r\n        return image_buffer;\r\n        break;\r\n      default:\r\n        throw new Error(\r\n          `Unknown binary websocket message of type ${eventType}`\r\n        );\r\n    }\r\n  }\r\n\r\n  api_host: string;\r\n  api_base: string;\r\n  clientId?: string;\r\n  socket?: WebSocket | null;\r\n  WebSocket: typeof WebSocket;\r\n  ssl: boolean;\r\n  user: string;\r\n  fetch: typeof fetch;\r\n\r\n  events: EventEmitter<ComfyUIClientEvents & Record<string & {}, any>> =\r\n    new EventEmitter();\r\n\r\n  protected socket_callbacks: Record<string, any> = {};\r\n\r\n  get registered() {\r\n    return this.events.eventNames();\r\n  }\r\n\r\n  constructor(config: IComfyApiConfig) {\r\n    this.api_host = config.api_host ?? ComfyUIWsClient.DEFAULT_API_HOST;\r\n    this.api_base = config.api_base ?? ComfyUIWsClient.DEFAULT_API_BASE;\r\n    this.clientId = config.clientId ?? uuidv4();\r\n    this.WebSocket = config.WebSocket ?? globalThis.WebSocket;\r\n    this.ssl = config.ssl ?? false;\r\n    this.user = config.user ?? ComfyUIWsClient.DEFAULT_USER;\r\n    if (!globalThis.fetch) {\r\n      throw new Error(\"fetch is not defined\");\r\n    }\r\n    this.fetch = config.fetch ?? globalThis.fetch.bind(globalThis);\r\n\r\n    if (!this.WebSocket) {\r\n      console.warn(\"No WebSocket implementation available, WebSocket disabled\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the headers for the API request.\r\n   *\r\n   * @param {RequestInit} [options] - (Optional) Additional options for the request.\r\n   * @return {HeadersInit} The headers for the API request.\r\n   */\r\n  apiHeaders(options?: RequestInit) {\r\n    const headers: HeadersInit = {\r\n      ...(this.user\r\n        ? {\r\n            \"Comfy-User\": this.user,\r\n          }\r\n        : {}),\r\n      // \"User-Agent\": `ComfyUIClient/${version}`,\r\n      Accept: \"*/*\",\r\n      ...(options?.headers ?? {}),\r\n    };\r\n    return headers;\r\n  }\r\n\r\n  /**\r\n   * Generates the URL for the API endpoint based on the provided route.\r\n   *\r\n   * @param {string} route - The route for the API endpoint.\r\n   * @return {string} The generated URL for the API endpoint.\r\n   */\r\n  apiURL(route: string): string {\r\n    const url = new URL(`http${this.ssl ? \"s\" : \"\"}://${this.api_host}`);\r\n    let [pathname, query] = (this.api_base + route).split(\"?\");\r\n    url.pathname = pathname;\r\n    url.pathname = url.pathname.replace(/\\/+/g, \"/\");\r\n    if (query) {\r\n      url.search = query;\r\n    }\r\n    if (this.clientId) {\r\n      url.searchParams.set(\"clientId\", this.clientId);\r\n    }\r\n    return url.toString();\r\n  }\r\n\r\n  /**\r\n   * Generates a URL for viewing a specific file with the given filename, subfolder, and type.\r\n   *\r\n   * @param {string} filename - The name of the file to view.\r\n   * @param {string} subfolder - The subfolder where the file is located.\r\n   * @param {string} type - The type of the file.\r\n   * @return {string} The URL for viewing the file.\r\n   */\r\n  viewURL(filename: string, subfolder: string, type: string): string {\r\n    const query = new URLSearchParams({\r\n      filename,\r\n      subfolder,\r\n      type,\r\n    }).toString();\r\n    return `http${this.ssl ? \"s\" : \"\"}://${this.api_host}${\r\n      this.api_base\r\n    }/view?${query}`;\r\n  }\r\n\r\n  /**\r\n   * Generates the WebSocket URL based on the current API host and SSL configuration.\r\n   *\r\n   * @return {string} The generated WebSocket URL.\r\n   */\r\n  wsURL(): string {\r\n    const url = new URL(`ws${this.ssl ? \"s\" : \"\"}://${this.api_host}`);\r\n    url.pathname = \"/ws\";\r\n    if (this.clientId) {\r\n      url.searchParams.set(\"clientId\", this.clientId);\r\n    }\r\n    return url.toString();\r\n  }\r\n\r\n  /**\r\n   * Fetches API data based on the provided route and options.\r\n   *\r\n   * NOTE: CORS policy: Request header field comfy-user is not allowed by Access-Control-Allow-Headers in preflight response. Please use empty string in browser.\r\n   *\r\n   * @param {string} route - The route for the API request.\r\n   * @param {RequestInit} [options] - (Optional) Additional options for the request.\r\n   * @return {Promise<Response>} A promise that resolves to the API response.\r\n   */\r\n  async fetchApi(route: string, options?: RequestInit): Promise<Response> {\r\n    if (this.closed) {\r\n      throw new Error(\"Client is closed\");\r\n    }\r\n    const url = this.apiURL(route);\r\n    return this.fetch(url, {\r\n      ...options,\r\n      headers: this.apiHeaders(options),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener for the specified event type.\r\n   *\r\n   * @param {keyof ComfyUIClientEvents | (string & {})} type - The type of event to listen for.\r\n   * @param {(...args: any) => void} callback - The callback function to be executed when the event is triggered.\r\n   * @param {any} options - (Optional) Additional options for the event listener.\r\n   * @return {() => void} A function that removes the event listener when called.\r\n   */\r\n  addEventListener<T extends EventEmitter.EventNames<ComfyUIClientEvents>>(\r\n    type: T,\r\n    callback: EventEmitter.EventListener<ComfyUIClientEvents, T>,\r\n    options?: any\r\n  ) {\r\n    this.events.on(type as any, callback, options);\r\n\r\n    return () => {\r\n      this.events.off(type as any, callback);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener for the specified event type.\r\n   *\r\n   * @param {keyof ComfyUIClientEvents | (string & {})} type - The type of event to listen for.\r\n   * @param {(...args: any) => void} callback - The callback function to be executed when the event is triggered.\r\n   * @param {any} options - (Optional) Additional options for the event listener.\r\n   * @return {() => void} A function that removes the event listener when called.\r\n   */\r\n  on<T extends EventEmitter.EventNames<ComfyUIClientEvents>>(\r\n    type: T,\r\n    callback: EventEmitter.EventListener<ComfyUIClientEvents, T>,\r\n    options?: any\r\n  ) {\r\n    return this.addEventListener(type, callback, options);\r\n  }\r\n\r\n  protected _polling_timer: any = null;\r\n  protected _polling_interval = 1000;\r\n  /**\r\n   * Poll status for colab and other things that don't support websockets.\r\n   */\r\n  private startPollingQueue() {\r\n    if (this._polling_timer) {\r\n      return;\r\n    }\r\n    this._polling_timer = setInterval(async () => {\r\n      try {\r\n        const resp = await this.fetchApi(\"/prompt\");\r\n        const status = await resp.json();\r\n        this.events.emit(\"status\", status);\r\n      } catch (error) {\r\n        this.events.emit(\"status\", null);\r\n      }\r\n    }, this._polling_interval);\r\n  }\r\n\r\n  protected addSocketCallback<K extends keyof WebSocketEventMap>(\r\n    socket: WebSocket,\r\n    type: K,\r\n    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,\r\n    options?: boolean | AddEventListenerOptions\r\n  ) {\r\n    this.socket_callbacks[type] = listener;\r\n    socket.addEventListener(type, listener, options);\r\n    return () => {\r\n      delete this.socket_callbacks[type];\r\n      socket.removeEventListener(type, listener, options);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Removes all event listeners from the given WebSocket and clears the socket_callbacks object.\r\n   */\r\n  protected removeSocketCallbacks() {\r\n    if (this.socket) {\r\n      for (const type in this.socket_callbacks) {\r\n        const listener = this.socket_callbacks[type];\r\n        this.socket.removeEventListener(type, listener);\r\n      }\r\n    }\r\n    this.socket_callbacks = {};\r\n  }\r\n\r\n  /**\r\n   * Creates and connects a WebSocket for realtime updates\r\n   * @param {boolean} isReconnect If the socket is connection is a reconnect attempt\r\n   */\r\n  private createSocket(isReconnect = false) {\r\n    if (this.socket) {\r\n      return;\r\n    }\r\n    if (!this.WebSocket) {\r\n      throw new Error(\r\n        \"WebSocket is not defined, please provide a WebSocket implementation\"\r\n      );\r\n    }\r\n    if (this.closed) {\r\n      return;\r\n    }\r\n\r\n    let opened = false;\r\n\r\n    this.socket = new this.WebSocket(this.wsURL());\r\n    this.socket.binaryType = \"arraybuffer\";\r\n\r\n    this.addSocketCallback(this.socket, \"open\", () => {\r\n      opened = true;\r\n      if (isReconnect) {\r\n        this.events.emit(\"reconnected\");\r\n      }\r\n    });\r\n\r\n    this.addSocketCallback(this.socket, \"error\", () => {\r\n      if (this.socket) this.socket.close();\r\n      if (!isReconnect && !opened) {\r\n        this.startPollingQueue();\r\n      }\r\n    });\r\n\r\n    this.addSocketCallback(this.socket, \"close\", () => {\r\n      setTimeout(() => {\r\n        this.socket = null;\r\n        this.createSocket(true);\r\n      }, 300);\r\n      if (opened) {\r\n        this.events.emit(\"status\", null);\r\n        this.events.emit(\"reconnecting\");\r\n      }\r\n    });\r\n\r\n    const isImageMessage = (event: MessageEvent) => {\r\n      if (typeof event.data === \"string\") {\r\n        return false;\r\n      }\r\n      if (ComfyUIWsClient.IS_BROWSER) {\r\n        return event.data instanceof Blob;\r\n      }\r\n      if (ArrayBuffer && event.data instanceof ArrayBuffer) {\r\n        return true;\r\n      }\r\n      if (Buffer && Buffer.isBuffer(event.data)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    this.addSocketCallback(this.socket, \"message\", (event) => {\r\n      this.events.emit(\"message\", event);\r\n\r\n      if (isImageMessage(event)) {\r\n        const image = ComfyUIWsClient.loadImageData(event.data);\r\n        this.events.emit(\"image_data\", image);\r\n      } else {\r\n        const msg = JSON.parse(event.data);\r\n\r\n        switch (msg.type) {\r\n          case \"status\":\r\n            if (msg.data.sid) {\r\n              this.clientId = msg.data.sid;\r\n            }\r\n            this.events.emit(\"status\", msg.data.status);\r\n            break;\r\n          case \"progress\":\r\n            this.events.emit(\"progress\", msg.data);\r\n            break;\r\n          case \"executing\":\r\n            this.events.emit(\"executing\", msg.data);\r\n            break;\r\n          case \"executed\":\r\n            this.events.emit(\"executed\", msg.data);\r\n            break;\r\n          case \"execution_start\":\r\n            this.events.emit(\"execution_start\", msg.data);\r\n            break;\r\n          case \"execution_error\":\r\n            this.events.emit(\"execution_error\", msg.data);\r\n            break;\r\n          case \"execution_cached\":\r\n            this.events.emit(\"execution_cached\", msg.data);\r\n            break;\r\n          case \"execution_interrupted\":\r\n            this.events.emit(\"execution_interrupted\", msg.data);\r\n            break;\r\n          default:\r\n            this.events.emit(msg.type, msg.data);\r\n            break;\r\n        }\r\n\r\n        const is_unhandled_message =\r\n          this.registered.includes(msg.type) === false;\r\n        if (is_unhandled_message) {\r\n          this.events.emit(\"unhandled\", msg);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes sockets and realtime updates\r\n   *\r\n   * @deprecated move to client.connect()\r\n   */\r\n  init() {\r\n    this.createSocket();\r\n  }\r\n\r\n  closed = false;\r\n  /**\r\n   * Closes the WebSocket connection and cleans up event listeners\r\n   */\r\n  close() {\r\n    if (this.closed) {\r\n      return;\r\n    }\r\n    this.closed = true;\r\n    this.events.emit(\"close\");\r\n\r\n    this.disconnect();\r\n    this.events.removeAllListeners();\r\n  }\r\n\r\n  /**\r\n   * Connects to the WebSocket server by creating a new socket connection.\r\n   *\r\n   * @param {Object} options - The options for connecting to the server.\r\n   * @param {Object} options.polling - The options for polling.\r\n   * @param {boolean} options.polling.enabled - Whether polling is enabled.\r\n   * @param {number} [options.polling.interval] - The interval for polling.\r\n   * @param {Object} options.websocket - The options for the WebSocket connection.\r\n   * @param {boolean} options.websocket.enabled - Whether the WebSocket connection is enabled.\r\n   * @return {this} - The instance of the class.\r\n   */\r\n  connect({\r\n    polling = {\r\n      enabled: false,\r\n    },\r\n    websocket = {\r\n      enabled: true,\r\n    },\r\n  }: {\r\n    polling?: {\r\n      enabled: boolean;\r\n      interval?: number;\r\n    };\r\n    websocket?: {\r\n      enabled: boolean;\r\n    };\r\n  } = {}) {\r\n    if (polling?.enabled) {\r\n      this._polling_interval = polling.interval ?? this._polling_interval;\r\n      this.startPollingQueue();\r\n    }\r\n    if (websocket?.enabled) {\r\n      this.createSocket();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Disconnects the WebSocket connection and cleans up event listeners.\r\n   */\r\n  disconnect() {\r\n    if (!this.socket) {\r\n      process.nextTick(this._disconnectPolling.bind(this));\r\n    } else {\r\n      this._disconnectSocket();\r\n    }\r\n    this._disconnectPolling();\r\n  }\r\n\r\n  /**\r\n   * Disconnects the WebSocket connection and cleans up event listeners.\r\n   *\r\n   * @return {void} This function does not return anything.\r\n   */\r\n  _disconnectSocket() {\r\n    const { socket } = this;\r\n    if (!socket) return;\r\n    this.socket = null;\r\n    try {\r\n      if (socket.readyState === socket.OPEN) {\r\n        socket.close(1000, \"Client closed\");\r\n      }\r\n    } catch (error) {\r\n      // pass\r\n    }\r\n    this.removeSocketCallbacks();\r\n    if (\"removeAllListeners\" in socket) {\r\n      (socket.removeAllListeners as any)?.();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disconnects the polling timer and sets it to null.\r\n   *\r\n   * @return {void}\r\n   */\r\n  _disconnectPolling() {\r\n    if (this._polling_timer !== null) {\r\n      clearInterval(this._polling_timer);\r\n      this._polling_timer = null;\r\n    }\r\n  }\r\n}\r\n","export type CachedFnOptions = {\r\n  expire_time?: number;\r\n  enabled?: boolean;\r\n};\r\n\r\nclass GlobalCacheHub {\r\n  static KEY = \"__COMFY_UI_CLIENT_CACHE__\";\r\n  protected _cached: Map<string, { result: any; expire: number }>;\r\n\r\n  constructor() {\r\n    this._cached = (globalThis as any)[GlobalCacheHub.KEY] || new Map();\r\n    (globalThis as any)[GlobalCacheHub.KEY] = this._cached;\r\n  }\r\n\r\n  clear() {\r\n    this._cached.clear();\r\n  }\r\n\r\n  get(key: string) {\r\n    return this._cached.get(key);\r\n  }\r\n\r\n  set(key: string, value: { result: any; expire: number }) {\r\n    this._cached.set(key, value);\r\n  }\r\n}\r\n\r\nexport class CachedFn {\r\n  static _defaultExpire: number = 60 * 1000;\r\n\r\n  protected expire_time_ms: number;\r\n  protected enabled: boolean;\r\n\r\n  protected _cached = new GlobalCacheHub();\r\n\r\n  protected cache_ns: string = \"\";\r\n\r\n  constructor(ns: string, options?: CachedFnOptions) {\r\n    this.expire_time_ms = options?.expire_time ?? CachedFn._defaultExpire;\r\n    this.enabled = options?.enabled ?? true;\r\n    this.cache_ns = ns;\r\n  }\r\n\r\n  public reset() {\r\n    this._cached.clear();\r\n  }\r\n\r\n  private _hashArgs(args: any[]): string {\r\n    try {\r\n      return JSON.stringify(args);\r\n    } catch (error) {\r\n      return args.toString();\r\n    }\r\n  }\r\n\r\n  public warp<ARGS extends any[], RET>(\r\n    key: string,\r\n    fn: (...args: ARGS) => RET\r\n  ): (...args: ARGS) => RET {\r\n    if (!this.enabled) {\r\n      return fn;\r\n    }\r\n    return (...args: ARGS) => {\r\n      const now = Date.now();\r\n      const argsHash = this._hashArgs(args);\r\n      const cacheKey = `${this.cache_ns}:${key}:${argsHash}`;\r\n      const hit_cached = this._cached.get(cacheKey);\r\n\r\n      if (hit_cached && hit_cached.expire > now) {\r\n        return hit_cached.result;\r\n      }\r\n\r\n      const result = fn(...args);\r\n      this._cached.set(cacheKey, { result, expire: now + this.expire_time_ms });\r\n      return result;\r\n    };\r\n  }\r\n}\r\n","import { CachedFn } from \"./CachedFn\";\r\nimport type { ClientPlugin } from \"./ClientPlugin\";\r\nimport { ComfyUIWsClient } from \"./ComfyUIWsClient\";\r\nimport { isNone } from \"./misc\";\r\nimport { ComfyUIClientResponseTypes } from \"./response.types\";\r\nimport { IComfyApiConfig, WorkflowOutput } from \"./types\";\r\nimport { ComfyUiWsTypes } from \"./ws.typs\";\r\n\r\n/**\r\n * The ComfyUIApiClient class provides a high-level interface for interacting with the ComfyUI API.\r\n *\r\n * @extends ComfyUIWsClient\r\n *\r\n * @example\r\n * ```typescript\r\n * const client = new ComfyUIApiClient({\r\n *  api_host: \"YOUR_API_HOST\",\r\n *  clientId: \"YOUR_CLIENT_ID\",\r\n * });\r\n *\r\n * const extensions = await client.getEmbeddings();\r\n * console.log(extensions);\r\n * ```\r\n */\r\nexport class ComfyUIApiClient extends ComfyUIWsClient {\r\n  private _cached_fn: CachedFn;\r\n\r\n  // NOTE: useless ... just for debug\r\n  private _plugins = [] as ClientPlugin[];\r\n\r\n  constructor(config: IComfyApiConfig) {\r\n    super(config);\r\n\r\n    const cache_ns = `${config.api_host}`;\r\n    this._cached_fn = new CachedFn(cache_ns, config.cache);\r\n  }\r\n\r\n  /**\r\n   * Use a plugin by calling its install method on this instance.\r\n   *\r\n   * @param {ClientPlugin} plugin - The plugin to install.\r\n   */\r\n  use(plugin: ClientPlugin) {\r\n    plugin.install(this);\r\n    this._plugins.push(plugin);\r\n  }\r\n\r\n  /**\r\n   * Gets a list of extension urls\r\n   * @returns An array of script urls to import\r\n   */\r\n  async getExtensions(): Promise<string[]> {\r\n    const invoke = async () => {\r\n      const resp = await this.fetchApi(\"/extensions\", { cache: \"no-store\" });\r\n      return await resp.json();\r\n    };\r\n    const cached = this._cached_fn.warp(\"extensions\", invoke);\r\n    return cached();\r\n  }\r\n\r\n  /**\r\n   * Gets a list of embedding names\r\n   * @returns An array of script urls to import\r\n   */\r\n  async getEmbeddings(): Promise<string[]> {\r\n    const invoke = async () => {\r\n      const resp = await this.fetchApi(\"/embeddings\", { cache: \"no-store\" });\r\n      return await resp.json();\r\n    };\r\n    const cached = this._cached_fn.warp(\"embeddings\", invoke);\r\n    return cached();\r\n  }\r\n\r\n  /**\r\n   * Loads node object definitions for the graph\r\n   * @returns {Promise<ComfyUIClientResponseTypes.ObjectInfo>} The object info for the graph\r\n   */\r\n  async getNodeDefs(): Promise<ComfyUIClientResponseTypes.ObjectInfo> {\r\n    const invoke = async () => {\r\n      const resp = await this.fetchApi(\"/object_info\", { cache: \"no-store\" });\r\n      const node_defs = await resp.json();\r\n      return node_defs;\r\n    };\r\n    const cached = this._cached_fn.warp(\"object_info\", invoke);\r\n    return cached();\r\n  }\r\n\r\n  /**\r\n   * Clears the node object definitions cache\r\n   */\r\n  resetCache() {\r\n    this._cached_fn.reset();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} queue_index The index at which to queue the prompt, passing -1 will insert the prompt at the front of the queue\r\n   * @param {Object} options\r\n   * @param {Object} options.prompt The prompt to queue\r\n   * @param {Object} options.workflow This png info to be added to resulting image\r\n   * @returns {Promise<ComfyUIClientResponseTypes.QueuePrompt>} The response from the server\r\n   */\r\n  async queuePrompt(\r\n    queue_index: number,\r\n    { prompt, workflow }: { prompt: any; workflow: any }\r\n  ): Promise<ComfyUIClientResponseTypes.QueuePrompt> {\r\n    const body: Record<string, unknown> = {\r\n      client_id: this.clientId,\r\n      prompt,\r\n      extra_data: { extra_pnginfo: { workflow } },\r\n    };\r\n\r\n    if (queue_index === -1) {\r\n      body.front = true;\r\n    } else if (queue_index !== 0) {\r\n      body.number = queue_index;\r\n    }\r\n\r\n    const res = await this.fetchApi(\"/prompt\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    if (res.status !== 200) {\r\n      const error_resp = await res.text();\r\n      try {\r\n        const error_data = JSON.parse(error_resp);\r\n        // TODO throw Error class\r\n        throw { response: error_data };\r\n      } catch (error) {\r\n        throw { response: error_resp };\r\n      }\r\n    }\r\n\r\n    return await res.json();\r\n  }\r\n\r\n  /**\r\n   * Loads a list of items (queue or history)\r\n   * @param {\"queue\" | \"history\"} type The type of items to load, queue or history\r\n   * @returns The items of the specified type grouped by their status\r\n   */\r\n  async getItems(type: \"history\"): ReturnType<ComfyUIApiClient[\"getHistory\"]>;\r\n  async getItems(type: \"queue\"): ReturnType<ComfyUIApiClient[\"getQueue\"]>;\r\n  async getItems(type: \"queue\" | \"history\"): Promise<any> {\r\n    if (type === \"queue\") {\r\n      return this.getQueue();\r\n    }\r\n    return this.getHistory();\r\n  }\r\n\r\n  /**\r\n   * Gets the current state of the queue\r\n   * @returns The currently running and queued items\r\n   */\r\n  async getQueue(): Promise<{\r\n    Running: Array<Record<string, unknown>>;\r\n    Pending: Array<Record<string, unknown>>;\r\n  }> {\r\n    try {\r\n      const res = await this.fetchApi(\"/queue\");\r\n      const data = await res.json();\r\n      return {\r\n        Running: data.queue_running.map((prompt: any) => ({\r\n          prompt,\r\n          remove: { name: \"Cancel\", cb: () => this.interrupt() },\r\n        })),\r\n        Pending: data.queue_pending.map((prompt: any) => ({ prompt })),\r\n      };\r\n    } catch (error) {\r\n      console.error(error);\r\n      return { Running: [], Pending: [] };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the prompt execution history\r\n   * @returns Prompt history including node outputs\r\n   */\r\n  async getHistory(max_items = 200): Promise<{\r\n    History: Array<{\r\n      // [index, prompt_id, prompt, payload, outputs_node]\r\n      prompt: [number, string, any, any, any];\r\n      outputs: Record<string, unknown>;\r\n      status: {\r\n        status_str: string;\r\n        completed: boolean;\r\n        messages: any[];\r\n      };\r\n    }>;\r\n  }> {\r\n    try {\r\n      const res = await this.fetchApi(`/history?max_items=${max_items}`);\r\n      return { History: Object.values(await res.json()) };\r\n    } catch (error) {\r\n      console.error(error);\r\n      return { History: [] };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets system & device stats\r\n   * @returns {ComfyUIClientResponseTypes.SystemStatsRoot} System stats such as python version, OS, per device info\r\n   */\r\n\r\n  async getSystemStats(): Promise<ComfyUIClientResponseTypes.SystemStatsRoot> {\r\n    const res = await this.fetchApi(\"/system_stats\");\r\n    return res.json();\r\n  }\r\n\r\n  /**\r\n   * Sends a POST request to the API\r\n   * @param {\"queue\" | \"history\"} type The endpoint to post to\r\n   * @param {any} body Optional POST data\r\n   */\r\n  private async postApi(type: string, body: any) {\r\n    await this.fetchApi(\"/\" + type, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: body ? JSON.stringify(body) : undefined,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes an item from the specified list\r\n   * @param {\"queue\" | \"history\"} type The type of item to delete, queue or history\r\n   * @param {any} id The id of the item to delete\r\n   */\r\n  async deleteItem(type: \"queue\" | \"history\", id: any) {\r\n    await this.postApi(type, { delete: [id] });\r\n  }\r\n\r\n  /**\r\n   * Clears the specified list\r\n   * @param {\"queue\" | \"history\"} type The type of list to clear, queue or history\r\n   */\r\n  async clearItems(type: \"queue\" | \"history\") {\r\n    await this.postApi(type, { clear: true });\r\n  }\r\n\r\n  /**\r\n   * Interrupts the execution of the running prompt\r\n   */\r\n  async interrupt() {\r\n    await this.postApi(\"interrupt\", null);\r\n  }\r\n\r\n  /**\r\n   * Free up memory by unloading models and freeing memory\r\n   */\r\n  async free(params?: { unload_models?: boolean; free_memory?: boolean }) {\r\n    await this.postApi(\"free\", params);\r\n  }\r\n\r\n  /**\r\n   * Gets user configuration data and where data should be stored\r\n   * @returns { Promise<{ storage: \"server\" | \"browser\", users?: Promise<string, unknown>, migrated?: boolean }> }\r\n   */\r\n  async getUserConfig() {\r\n    return (await this.fetchApi(\"/users\")).json();\r\n  }\r\n\r\n  /**\r\n   * Creates a new user\r\n   * @param { string } username\r\n   * @returns The fetch response\r\n   */\r\n  async createUser(username: string): Promise<Response> {\r\n    return this.fetchApi(\"/users\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ username }),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets all setting values for the current user\r\n   * @returns { Promise<string, unknown> } A dictionary of id -> value\r\n   */\r\n  async getSettings(): Promise<Record<string, unknown>> {\r\n    return (await this.fetchApi(\"/settings\")).json();\r\n  }\r\n\r\n  /**\r\n   * Gets a setting for the current user\r\n   * @param { string } id The id of the setting to fetch\r\n   * @returns { Promise<unknown> } The setting value\r\n   */\r\n  async getSetting(id: string): Promise<unknown> {\r\n    return (await this.fetchApi(`/settings/${encodeURIComponent(id)}`)).json();\r\n  }\r\n\r\n  /**\r\n   * Stores a dictionary of settings for the current user\r\n   * @param { Record<string, unknown> } settings Dictionary of setting id -> value to save\r\n   * @returns { Promise<void> }\r\n   */\r\n  async storeSettings(settings: Record<string, unknown>): Promise<Response> {\r\n    return this.fetchApi(`/settings`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(settings),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stores a setting for the current user\r\n   * @param { string } id The id of the setting to update\r\n   * @param { unknown } value The value of the setting\r\n   * @returns { Promise<void> }\r\n   */\r\n  async storeSetting(id: string, value: unknown): Promise<Response> {\r\n    return this.fetchApi(`/settings/${encodeURIComponent(id)}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(value),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets a user data file for the current user\r\n   * @param { string } file The name of the userdata file to load\r\n   * @param { RequestInit } [options]\r\n   * @returns { Promise<unknown> } The fetch response object\r\n   */\r\n  async getUserData(file: string, options?: RequestInit): Promise<Response> {\r\n    return this.fetchApi(`/userdata/${encodeURIComponent(file)}`, options);\r\n  }\r\n\r\n  /**\r\n   * Stores a user data file for the current user\r\n   * @param { string } file The name of the userdata file to save\r\n   * @param { any } data The data to save to the file\r\n   * @param { RequestInit & { stringify?: boolean, throwOnError?: boolean } } [options]\r\n   * @returns { Promise<void> }\r\n   */\r\n  async storeUserData(\r\n    file: string,\r\n    data: any,\r\n    options?: RequestInit & { stringify?: boolean; throwOnError?: boolean }\r\n  ): Promise<void> {\r\n    const resp = await this.fetchApi(`/userdata/${encodeURIComponent(file)}`, {\r\n      method: \"POST\",\r\n      body: options?.stringify ? JSON.stringify(data) : data,\r\n      ...options,\r\n    });\r\n    if (resp.status !== 200) {\r\n      const error = await resp.text();\r\n      throw new Error(\r\n        `Error storing user data file '${file}': ${resp.status} ${error}`\r\n      );\r\n    }\r\n  }\r\n\r\n  // ----------------- get status ++ -----------------\r\n\r\n  /**\r\n   * Retrieves the list of samplers from the node definitions.\r\n   *\r\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the sampler names.\r\n   */\r\n  async getSamplers() {\r\n    const node_config = await this.getNodeDefs();\r\n    // find KSampler node\r\n    const node = node_config[\"KSampler\"];\r\n    const sampler_name = node?.input?.required?.[\"sampler_name\"]?.[0] || [];\r\n    return sampler_name as string[];\r\n  }\r\n\r\n  /**\r\n   * Retrieves the list of schedulers from the node definitions.\r\n   *\r\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the scheduler names.\r\n   */\r\n  async getSchedulers() {\r\n    const node_config = await this.getNodeDefs();\r\n    // find Scheduler node\r\n    const node = node_config[\"KSampler\"];\r\n    const scheduler_name = node?.input?.required?.[\"scheduler\"]?.[0] || [];\r\n    return scheduler_name as string[];\r\n  }\r\n\r\n  /**\r\n   * Retrieves the list of model names from the node definitions.\r\n   *\r\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the model names.\r\n   */\r\n  async getSDModels() {\r\n    const node_config = await this.getNodeDefs();\r\n    // find CheckpointLoaderSimple node\r\n    const node = node_config[\"CheckpointLoaderSimple\"];\r\n    const model_name = node?.input?.required?.[\"ckpt_name\"]?.[0] || [];\r\n    return model_name as string[];\r\n  }\r\n\r\n  /**\r\n   * Retrieves the list of model names from the node definitions.\r\n   *\r\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the model names.\r\n   */\r\n  async getCNetModels() {\r\n    const node_config = await this.getNodeDefs();\r\n    // find ControlNetLoader node\r\n    const node = node_config[\"ControlNetLoader\"];\r\n    const model_name = node?.input?.required?.[\"control_net_name\"]?.[0] || [];\r\n    return model_name as string[];\r\n  }\r\n\r\n  /**\r\n   * Retrieves the list of model names from the node definitions for the UpscaleModelLoader node.\r\n   *\r\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the model names.\r\n   */\r\n  async getUpscaleModels() {\r\n    const node_config = await this.getNodeDefs();\r\n    // find UpscaleModelLoader node\r\n    const node = node_config[\"UpscaleModelLoader\"];\r\n    const model_name = node?.input?.required?.[\"model_name\"]?.[0] || [];\r\n    return model_name as string[];\r\n  }\r\n\r\n  /**\r\n   * Retrieves the list of hypernetwork names from the node definitions.\r\n   *\r\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the hypernetwork names.\r\n   */\r\n  async getHyperNetworks() {\r\n    const node_config = await this.getNodeDefs();\r\n    // find HypernetworkLoader node\r\n    const node = node_config[\"HypernetworkLoader\"];\r\n    const model_name = node?.input?.required?.[\"hypernetwork_name\"]?.[0] || [];\r\n    return model_name as string[];\r\n  }\r\n\r\n  /**\r\n   * Retrieves the list of LoRAs from the node definitions.\r\n   *\r\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the LoRAs.\r\n   */\r\n  async getLoRAs() {\r\n    const node_config = await this.getNodeDefs();\r\n    // find LoraLoader node\r\n    const node = node_config[\"LoraLoader\"];\r\n    const model_name = node?.input?.required?.[\"lora_name\"]?.[0] || [];\r\n    return model_name as string[];\r\n  }\r\n\r\n  /**\r\n   * Retrieves the list of VAE names from the node definitions.\r\n   *\r\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the VAE names.\r\n   */\r\n  async getVAEs() {\r\n    const node_config = await this.getNodeDefs();\r\n    // find VAELoader node\r\n    const node = node_config[\"VAELoader\"];\r\n    const model_name = node?.input?.required?.[\"vae_name\"]?.[0] || [];\r\n    return model_name as string[];\r\n  }\r\n\r\n  // ----------------- Prompt ++ -----------------\r\n\r\n  /**\r\n   * Retrieves the status of a prompt based on the provided prompt ID.\r\n   *\r\n   * @param {string} prompt_id - The ID of the prompt to check status for.\r\n   * @return {Object} Object containing the running, pending, and done status of the prompt.\r\n   */\r\n  async getPromptStatus(prompt_id: string) {\r\n    const { Running, Pending } = await this.getQueue();\r\n    const running = Running.some(\r\n      (task: any) => task?.prompt?.[1] === prompt_id\r\n    );\r\n    const pending = Pending.some(\r\n      (task: any) => task?.prompt?.[1] === prompt_id\r\n    );\r\n    const done = !running && !pending;\r\n    return {\r\n      running,\r\n      pending,\r\n      done,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Retrieves the outputs of a prompt with the given ID from the history.\r\n   *\r\n   * @param {string} prompt_id - The ID of the prompt to retrieve the outputs for.\r\n   * @return {Promise<any>} A promise that resolves to the outputs of the prompt.\r\n   * @throws {Error} If the prompt with the given ID is not found in the history or if it failed with a non-\"success\" status.\r\n   */\r\n  async getPromptOutputs(prompt_id: string) {\r\n    const { History: history } = await this.getHistory();\r\n    const item = history.find((item) => item.prompt[1] === prompt_id);\r\n    if (!item) {\r\n      throw new Error(`Prompt [${prompt_id}] not found in history`);\r\n    }\r\n\r\n    const status = item.status.status_str;\r\n    if (status !== \"success\") {\r\n      throw new Error(`Prompt [${prompt_id}] failed with status: ${status}`);\r\n    }\r\n\r\n    return item.outputs;\r\n  }\r\n\r\n  /**\r\n   * Retrieves the result of a prompt based on the provided prompt ID.\r\n   *\r\n   * @param {string} prompt_id - The ID of the prompt to retrieve the result for.\r\n   * @return {WorkflowOutput} An object containing the images associated with the prompt and the prompt ID.\r\n   */\r\n  async getPromptImageResult(prompt_id: string): Promise<WorkflowOutput> {\r\n    const outputs = await this.getPromptOutputs(prompt_id);\r\n\r\n    // find image from history\r\n    const images: {\r\n      filename?: string;\r\n      subfolder?: string;\r\n      type: string;\r\n    }[] = Object.values(outputs).flatMap((node_output) => {\r\n      return (node_output as any).images || [];\r\n    });\r\n    const images_url = images\r\n      .map((image) => {\r\n        const { filename, subfolder, type } = image;\r\n        if (isNone(filename) || isNone(subfolder) || type !== \"output\") {\r\n          return null;\r\n        }\r\n        return this.viewURL(filename, subfolder, type);\r\n      })\r\n      .filter(Boolean) as string[];\r\n    return {\r\n      images: images_url.map((data) => ({ type: \"url\", data })),\r\n      prompt_id,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Asynchronously waits for the prompt with the provided ID to be done.\r\n   *\r\n   * @param {string} prompt_id - The ID of the prompt to wait for.\r\n   * @param {number} [polling_ms=1000] - The number of milliseconds to wait between checks.\r\n   * @return {void}\r\n   */\r\n  async waitForPrompt(prompt_id: string, polling_ms = 1000) {\r\n    let prompt_status = await this.getPromptStatus(prompt_id);\r\n    while (!prompt_status.done) {\r\n      await new Promise((resolve) => setTimeout(resolve, polling_ms));\r\n      prompt_status = await this.getPromptStatus(prompt_id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Asynchronously waits for the prompt with the provided ID to be done using WebSocket.\r\n   *\r\n   * @param {string} prompt_id - The ID of the prompt to wait for.\r\n   * @return {Promise<WorkflowOutput>} A promise that resolves to a WorkflowOutput object containing the images and prompt_id.\r\n   */\r\n  async waitForPromptWebSocket(prompt_id: string) {\r\n    const output: WorkflowOutput = {\r\n      images: [],\r\n      prompt_id,\r\n    };\r\n    return new Promise<WorkflowOutput>((resolve, reject) => {\r\n      let done = false;\r\n      const offEvent2 = this.on(\"image_data\", (data) => {\r\n        output.images.push({ type: \"buff\", data });\r\n      });\r\n      const offEvent = this.on(\"executed\", (data) => {\r\n        const { prompt_id: current_prompt_id, output: executed_output } = data;\r\n        if (current_prompt_id !== prompt_id) {\r\n          return;\r\n        }\r\n        done = true;\r\n        const { images = [] } = executed_output || {};\r\n\r\n        // collect url images\r\n        for (const image of images) {\r\n          const { filename, subfolder, type } = image || {};\r\n          if (isNone(filename) || isNone(subfolder) || type !== \"output\") {\r\n            continue;\r\n          }\r\n          output.images.push({\r\n            type: \"url\",\r\n            data: this.viewURL(filename, subfolder, type),\r\n          });\r\n        }\r\n\r\n        resolve(output);\r\n        offEvent();\r\n        offEvent2();\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Randomizes the seed value of nodes with class type \"KSampler\" in the prompt.\r\n   *\r\n   * @param {Record<string, unknown>} prompt - The prompt object to randomize.\r\n   * @return {void}\r\n   */\r\n  randomizePrompt(prompt: Record<string, unknown>) {\r\n    for (const node of Object.values(prompt) as any[]) {\r\n      if (node.class_type === \"KSampler\") {\r\n        // python random seed is 32 bit\r\n        node.inputs.seed = Math.floor(Math.random() * (2 ** 32 - 1));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Asynchronously enqueues a prompt with optional workflow and random seed.\r\n   *\r\n   * @param {Record<string, unknown>} prompt - The prompt to enqueue.\r\n   * @param {Object} [options] - The options for enqueueing the prompt.\r\n   * @param {Record<string, unknown>} [options.workflow] - The workflow for the prompt.\r\n   * @param {boolean} [options.disable_random_seed=false] - Whether to disable random seed.\r\n   * @return {Promise<{ prompt_id: string; number: number; node_errors: any; }>} A promise that resolves with the enqueued prompt response.\r\n   * @throws {Error} If there is an error in the response.\r\n   */\r\n  async _enqueue_prompt(\r\n    prompt: Record<string, unknown>,\r\n    options?: {\r\n      workflow?: Record<string, unknown>;\r\n      disable_random_seed?: boolean;\r\n    }\r\n  ) {\r\n    if (!options?.disable_random_seed) {\r\n      this.randomizePrompt(prompt);\r\n    }\r\n    const resp = await this.queuePrompt(0, {\r\n      prompt,\r\n      workflow: options?.workflow,\r\n    });\r\n    if (\"error\" in resp) {\r\n      // TODO new Error class\r\n      throw new Error(resp.error);\r\n    }\r\n    return resp;\r\n  }\r\n\r\n  /**\r\n   * Asynchronously runs a prompt with the provided options.\r\n   *\r\n   * This function does not use WebSocket, but uses polling to get the result\r\n   * So if your workflow contains custom ws events, this function will not be able to get these events\r\n   *\r\n   * @param {Record<string, unknown>} prompt - The prompt to run.\r\n   * @param {Object} options - The options for running the prompt.\r\n   * @param {Record<string, unknown>} options.workflow - The workflow for the prompt, It will be added to the png info of the generated image.\r\n   * @param {boolean} [options.disable_random_seed] - Flag to disable random seed generation.\r\n   * @param {number} [options.polling_ms=1000] - The number of milliseconds to polling query prompt result.\r\n   * @return {Promise<WorkflowOutput>} A promise that resolves with the prompt result.\r\n   *\r\n   * @deprecated Use `enqueue_polling` instead\r\n   */\r\n  async runPrompt(\r\n    prompt: Record<string, unknown>,\r\n    options?: {\r\n      workflow?: Record<string, unknown>;\r\n      disable_random_seed?: boolean;\r\n      polling_ms?: number;\r\n    }\r\n  ) {\r\n    const resp = await this._enqueue_prompt(prompt, options);\r\n    const prompt_id = resp.prompt_id;\r\n    await this.waitForPrompt(prompt_id, options?.polling_ms);\r\n    return await this.getPromptImageResult(prompt_id);\r\n  }\r\n\r\n  /**\r\n   * Asynchronously runs a prompt with the provided options.\r\n   *\r\n   * This function does not use WebSocket, but uses polling to get the result\r\n   * So if your workflow contains custom ws events, this function will not be able to get these events\r\n   *\r\n   * @param {Record<string, unknown>} prompt - The prompt to run.\r\n   * @param {Object} options - The options for running the prompt.\r\n   * @param {Record<string, unknown>} options.workflow - The workflow for the prompt, It will be added to the png info of the generated image.\r\n   * @param {boolean} [options.disable_random_seed] - Flag to disable random seed generation.\r\n   * @param {number} [options.polling_ms=1000] - The number of milliseconds to polling query prompt result.\r\n   * @return {Promise<WorkflowOutput>} A promise that resolves with the prompt result.\r\n   */\r\n  async enqueue_polling(\r\n    prompt: Record<string, unknown>,\r\n    options?: {\r\n      workflow?: Record<string, unknown>;\r\n      disable_random_seed?: boolean;\r\n      polling_ms?: number;\r\n    }\r\n  ) {\r\n    const resp = await this._enqueue_prompt(prompt, options);\r\n    const prompt_id = resp.prompt_id;\r\n    await this.waitForPrompt(prompt_id, options?.polling_ms);\r\n    return await this.getPromptImageResult(prompt_id);\r\n  }\r\n\r\n  /**\r\n   * Enqueues a prompt and waits for the corresponding prompt websocket.\r\n   *\r\n   * @param {Record<string, unknown>} prompt - The prompt to enqueue.\r\n   * @param {{ workflow?: Record<string, unknown>; disable_random_seed?: boolean; }} [options] - The options for enqueueing the prompt.\r\n   * @param {Record<string, unknown>} [options.workflow] - This data for PNG info.\r\n   * @param {boolean} [options.disable_random_seed] - Whether to disable random seed.\r\n   * @return {Promise<WorkflowOutput>} A promise that resolves with the prompt result.\r\n   */\r\n  async enqueue(\r\n    prompt: Record<string, unknown>,\r\n    options?: {\r\n      /**\r\n       * this data for PNG info\r\n       */\r\n      workflow?: Record<string, unknown>;\r\n      disable_random_seed?: boolean;\r\n      progress?: (p: ComfyUiWsTypes.Messages.Progress) => void;\r\n    }\r\n  ) {\r\n    const resp = await this._enqueue_prompt(prompt, options);\r\n    const prompt_id = resp.prompt_id;\r\n\r\n    let off: any;\r\n    if (options?.progress) {\r\n      off = this.on(\"progress\", (_data) => {\r\n        const data = {\r\n          // old api response type:\r\n          ...(\"progress\" in _data ? { ...(_data as any).progress } : {}),\r\n          // new api: https://github.com/StableCanvas/comfyui-client/issues/6\r\n          ..._data,\r\n        };\r\n        if (data.prompt_id === prompt_id) {\r\n          options?.progress?.(data);\r\n        }\r\n      });\r\n    }\r\n    try {\r\n      return await this.waitForPromptWebSocket(prompt_id);\r\n    } finally {\r\n      off?.();\r\n    }\r\n  }\r\n}\r\n","import { ComfyUIApiClient } from \"./ComfyUIApiClient\";\r\nimport { isNone } from \"./misc\";\r\nimport type { WorkflowOutput, IWorkflow } from \"./types\";\r\n\r\nexport class InvokedWorkflow {\r\n  protected _task_id?: Promise<string>;\r\n  protected _enqueue_req?: ReturnType<ComfyUIApiClient[\"_enqueue_prompt\"]>;\r\n\r\n  protected _result: WorkflowOutput = {\r\n    images: [],\r\n    prompt_id: \"\",\r\n  };\r\n\r\n  executed = false;\r\n\r\n  constructor(public workflow: IWorkflow, public client: ComfyUIApiClient) {}\r\n\r\n  public enqueue() {\r\n    const { prompt, workflow: wf } = this.workflow;\r\n    this._enqueue_req = this.client._enqueue_prompt(prompt, { workflow: wf });\r\n    this._task_id = this._enqueue_req.then((data) => data.prompt_id);\r\n\r\n    this._enqueue_req.then((data) => {\r\n      this._result.prompt_id = data.prompt_id;\r\n    });\r\n  }\r\n\r\n  protected load_result_data(data: any) {\r\n    const { output: executed_output } = data;\r\n    const { images = [] } = executed_output || {};\r\n\r\n    // collect url images\r\n    for (const image of images) {\r\n      const { filename, subfolder, type } = image || {};\r\n      if (isNone(filename) || isNone(subfolder) || type !== \"output\") {\r\n        continue;\r\n      }\r\n      this._result.images.push({\r\n        type: \"url\",\r\n        data: this.client.viewURL(filename, subfolder, type),\r\n      });\r\n    }\r\n  }\r\n\r\n  public async query() {\r\n    if (!this._task_id) {\r\n      throw new Error(\r\n        \"This workflow is not enqueued and the execution status cannot be queried\"\r\n      );\r\n    }\r\n    return this.client.getPromptStatus(await this._task_id);\r\n  }\r\n\r\n  public async interrupt() {\r\n    if (!this._task_id) {\r\n      throw new Error(\r\n        \"This workflow is not enqueued and the execution status cannot be interrupt\"\r\n      );\r\n    }\r\n    const id = await this._task_id;\r\n    const { pending, running, done } = await this.query();\r\n    if (done) return;\r\n    if (pending) {\r\n      this.client.deleteItem(\"queue\", id);\r\n      return;\r\n    }\r\n    if (running) {\r\n      return this.client.interrupt();\r\n    }\r\n    throw new Error(`wrong task status, id: ${id}`);\r\n  }\r\n\r\n  public async wait() {\r\n    if (!this._task_id) {\r\n      throw new Error(\r\n        \"This workflow is not enqueued and the execution status cannot be wait\"\r\n      );\r\n    }\r\n    const task_id = await this._task_id;\r\n    return new Promise<WorkflowOutput>((resolve, reject) => {\r\n      const zone = (fn: (done: () => void) => Function[]) => {\r\n        let offs: Function[] = [];\r\n        offs = fn(() => offs.forEach((cb) => cb()));\r\n      };\r\n      zone((done) => [\r\n        this.client.on(\"execution_interrupted\", (data) => {\r\n          if (data.prompt_id === task_id) {\r\n            reject(new Error(\"Execution Interrupted\"));\r\n            done();\r\n          }\r\n        }),\r\n        this.client.on(\"image_data\", (data) => {\r\n          if (this.executed) {\r\n            return;\r\n          }\r\n          this._result.images.push({\r\n            type: \"buff\",\r\n            data,\r\n          });\r\n        }),\r\n        this.client.on(\"executed\", (data) => {\r\n          if (data.prompt_id !== task_id) {\r\n            return;\r\n          }\r\n          this.load_result_data(data);\r\n          this.executed = true;\r\n          resolve(this._result);\r\n          done();\r\n        }),\r\n      ]);\r\n    });\r\n  }\r\n}\r\n","import { ComfyUIApiClient } from \"./ComfyUIApiClient\";\r\nimport { InvokedWorkflow } from \"./InvokedWorkflow\";\r\nimport { ComfyUINodeTypes } from \"./schema/comfyui.node.typs\";\r\nimport { WorkflowPromptNode } from \"./types\";\r\nimport { IWorkflow } from \"./types\";\r\n\r\nconst deepClone: <T>(obj: T) => T = globalThis.structuredClone\r\n  ? globalThis.structuredClone\r\n  : (x) => JSON.parse(JSON.stringify(x));\r\n\r\ntype NodeOutput = [string, number];\r\n\r\ntype NodeClassInputs = Record<\r\n  string,\r\n  string | boolean | number | null | undefined | NodeOutput\r\n>;\r\n\r\n// { k: { [k:string]: unknown } } => { k: any }\r\ntype InputsFormat<T> = {\r\n  [K in keyof T]: T[K] extends { [k: string]: unknown }\r\n    ? NodeOutput\r\n    : T[K] | NodeOutput;\r\n};\r\n\r\ninterface ComfyUINodeClass<INP extends NodeClassInputs = NodeClassInputs> {\r\n  (inputs: INP): NodeOutput[];\r\n}\r\n\r\ntype BuiltinNodeClasses = {\r\n  [K in keyof Required<ComfyUINodeTypes.NodeTypes>]: Required<\r\n    Required<ComfyUINodeTypes.NodeTypes>[K]\r\n  > extends {\r\n    inputs: infer INP;\r\n  }\r\n    ? ComfyUINodeClass<InputsFormat<INP> & NodeClassInputs>\r\n    : ComfyUINodeClass<NodeClassInputs>;\r\n};\r\n\r\n/**\r\n * A class for creating a workflow using a fluent API.\r\n * \r\n * @example\r\n * ```typescript\r\n  const workflow = new ComfyUIWorkflow();\r\n  const {\r\n    KSampler,\r\n    CheckpointLoaderSimple,\r\n    EmptyLatentImage,\r\n    CLIPTextEncode,\r\n    VAEDecode,\r\n    SaveImage,\r\n    NODE1,\r\n  } = workflow.classes;\r\n\r\n  const seed = Math.floor(Math.random() * 2 ** 32);\r\n  const pos = \"best quality, 1girl\";\r\n  const neg = \"worst quality, bad anatomy, embedding:NG_DeepNegative_V1_75T\";\r\n  const model1_name = \"lofi_v5.baked.fp16.safetensors\";\r\n  const model2_name = \"case-h-beta.baked.fp16.safetensors\";\r\n  const sampler_settings = {\r\n    seed,\r\n    steps: 35,\r\n    cfg: 4,\r\n    sampler_name: \"dpmpp_2m_sde_gpu\",\r\n    scheduler: \"karras\",\r\n    denoise: 1,\r\n  };\r\n\r\n  const [model1, clip1, vae1] = CheckpointLoaderSimple({\r\n    ckpt_name: model1_name,\r\n  });\r\n  const [model2, clip2, vae2] = CheckpointLoaderSimple({\r\n    ckpt_name: model2_name,\r\n  });\r\n\r\n  const dress_case = [\r\n    \"white yoga\",\r\n    \"black office\",\r\n    \"pink sportswear\",\r\n    \"cosplay\",\r\n  ];\r\n\r\n  const generate_pipeline = (model, clip, vae, pos, neg) => {\r\n    const [latent_image] = EmptyLatentImage({\r\n      width: 640,\r\n      height: 960,\r\n      batch_size: 1,\r\n    });\r\n    const [positive] = CLIPTextEncode({ text: pos, clip });\r\n    const [negative] = CLIPTextEncode({ text: neg, clip });\r\n    const [samples] = KSampler({\r\n      ...sampler_settings,\r\n      model,\r\n      positive,\r\n      negative,\r\n      latent_image,\r\n    });\r\n    const [image] = VAEDecode({ samples, vae });\r\n    return image;\r\n  };\r\n\r\n  for (const cloth of dress_case) {\r\n    const input_pos = `${pos}, ${cloth} dress`;\r\n    const image = generate_pipeline(model1, clip1, vae1, input_pos, neg);\r\n    SaveImage({\r\n      images: image,\r\n      filename_prefix: `${cloth}-lofi-v5`,\r\n    });\r\n\r\n    const input_pos2 = `${pos}, ${cloth} dress`;\r\n    const image2 = generate_pipeline(model2, clip2, vae2, input_pos2, neg);\r\n    SaveImage({\r\n      images: image2,\r\n      filename_prefix: `${cloth}-case-h-beta`,\r\n    });\r\n  }\r\n\r\n  return workflow;\r\n * ```\r\n */\r\nexport class ComfyUIWorkflow {\r\n  protected _workflow: IWorkflow = {\r\n    prompt: {},\r\n  };\r\n  protected _last_node_id = 0;\r\n\r\n  public classes = this._createClassesProxy();\r\n\r\n  protected _createClassesProxy() {\r\n    const source = {} as BuiltinNodeClasses & Record<string, ComfyUINodeClass>;\r\n    return new Proxy(source, {\r\n      get: (target, p, receiver) => {\r\n        if (p in target) {\r\n          return (target as any)[p];\r\n        }\r\n        return (inputs: Record<string, any>) => {\r\n          const node: WorkflowPromptNode = {\r\n            class_type: p.toString(),\r\n            inputs,\r\n          };\r\n          const id = (++this._last_node_id).toString();\r\n          this._workflow.prompt[id] = node;\r\n          return Array.from({ length: 10 }, (_, i) => {\r\n            return [id, i];\r\n          });\r\n        };\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Resets the workflow by clearing the prompt and setting the workflow to undefined.\r\n   */\r\n  public reset() {\r\n    this._workflow.prompt = {};\r\n    this._workflow.workflow = undefined;\r\n    this._last_node_id = 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the current workflow object.\r\n   *\r\n   * @return {IWorkflow} The current workflow object.\r\n   *\r\n   * @deprecated use `workflow` instead\r\n   */\r\n  public end() {\r\n    return this.workflow();\r\n  }\r\n\r\n  /**\r\n   * Returns the current workflow object.\r\n   *\r\n   * @return {IWorkflow} The current workflow object.\r\n   */\r\n  public workflow() {\r\n    return deepClone(this._workflow);\r\n  }\r\n\r\n  /**\r\n   * Invoke this workflow using the provided client.\r\n   *\r\n   * @param {ComfyUIApiClient} client - The client used to run the prompt.\r\n   * @return {Promise<WorkflowOutput>} A promise that resolves with the result of the prompt.\r\n   */\r\n  public invoke(client: ComfyUIApiClient) {\r\n    const invoked = this.instance(client);\r\n    invoked.enqueue();\r\n    const result = invoked.wait();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new invoked workflow instance.\r\n   *\r\n   * @param {ComfyUIApiClient} client - The client used to run the prompt.\r\n   * @return {InvokedWorkflow} The invoked workflow instance.\r\n   */\r\n  public instance(client: ComfyUIApiClient) {\r\n    const { prompt, workflow } = this.workflow();\r\n    const invoked = new InvokedWorkflow({ prompt, workflow }, client);\r\n    return invoked;\r\n  }\r\n\r\n  /**\r\n   * Invokes the workflow using the provided client with polling.\r\n   *\r\n   * @param {ComfyUIApiClient} client - The client used to run the prompt.\r\n   * @return {Promise<WorkflowOutput>} A promise that resolves with the result of the prompt.\r\n   */\r\n  public invoke_polling(client: ComfyUIApiClient) {\r\n    const { prompt, workflow } = this.workflow();\r\n    return client.enqueue_polling(prompt, { workflow });\r\n  }\r\n}\r\n","import { ComfyUIApiClient } from \"./ComfyUIApiClient\";\r\n\r\ntype FnHook<\r\n  N extends keyof ComfyUIApiClient = keyof ComfyUIApiClient,\r\n  Fn extends ComfyUIApiClient[N] = ComfyUIApiClient[N],\r\n> = Fn extends (...args: any) => any\r\n  ? {\r\n      type: \"function\";\r\n      name: N;\r\n      fn: (original: Fn, ...args: Parameters<Fn>) => ReturnType<Fn>;\r\n    }\r\n  : never;\r\n\r\ntype PluginHook<\r\n  N extends keyof ComfyUIApiClient = keyof ComfyUIApiClient,\r\n  Fn extends ComfyUIApiClient[N] = ComfyUIApiClient[N],\r\n> = FnHook<N, Fn>;\r\n\r\nexport class ClientPlugin {\r\n  private hooks = [] as PluginHook[];\r\n\r\n  public install(instance: ComfyUIApiClient) {\r\n    for (const hook of this.hooks) {\r\n      const ins = instance as any;\r\n      const original = ins[hook.name].bind(instance);\r\n      ins[hook.name] = (...args: Parameters<typeof original>) => {\r\n        return (hook.fn as any).bind(instance)(original, ...args);\r\n      };\r\n    }\r\n  }\r\n\r\n  protected addHook<\r\n    N extends keyof ComfyUIApiClient = keyof ComfyUIApiClient,\r\n    Fn extends ComfyUIApiClient[N] = ComfyUIApiClient[N],\r\n  >(hook: PluginHook<N, Fn>) {\r\n    this.hooks.push(hook);\r\n  }\r\n}\r\n","import { ClientPlugin } from \"../ClientPlugin\";\r\n\r\n/**\r\n * Provide api-auth support for this https://github.com/liusida/ComfyUI-Login/tree/main extension\r\n */\r\nexport class LoginAuthPlugin extends ClientPlugin {\r\n  constructor(\r\n    readonly options: {\r\n      token: string;\r\n    }\r\n  ) {\r\n    super();\r\n\r\n    this.addHook({\r\n      type: \"function\",\r\n      name: \"apiURL\",\r\n      fn: (original, ...args) => {\r\n        const url = original(...args);\r\n        const urlObj = new URL(url);\r\n        urlObj.searchParams.set(\"token\", this.options.token);\r\n        return urlObj.toString();\r\n      },\r\n    });\r\n\r\n    this.addHook({\r\n      type: \"function\",\r\n      name: \"wsURL\",\r\n      fn: (original, ...args) => {\r\n        const url = original(...args);\r\n        const urlObj = new URL(url);\r\n        urlObj.searchParams.set(\"token\", this.options.token);\r\n        return urlObj.toString();\r\n      },\r\n    });\r\n  }\r\n}\r\n"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","exports","isNone","x","ComfyUIWsClient","config","_config$api_host","_config$api_base","_config$clientId","_config$WebSocket","_config$ssl","_config$user","_config$fetch","api_host","api_base","clientId","socket","WebSocket","ssl","user","fetch","socket_callbacks","_polling_timer","_polling_interval","closed","DEFAULT_API_HOST","DEFAULT_API_BASE","replace","c","r","Math","random","toString","globalThis","DEFAULT_USER","Error","bind","console","warn","loadImageData","buf","eventType","DataView","getUint32","_proto","apiHeaders","options","_options$headers","_extends","Accept","headers","apiURL","route","url","URL","_split","split","query","pathname","search","searchParams","set","viewURL","filename","subfolder","type","URLSearchParams","wsURL","fetchApi","_this","Promise","resolve","e","reject","addEventListener","callback","_this2","startPollingQueue","_this3","setInterval","_temp","then","resp","json","status","_catch","addSocketCallback","_this4","removeEventListener","removeSocketCallbacks","createSocket","isReconnect","_this5","opened","binaryType","close","setTimeout","data","IS_BROWSER","Blob","ArrayBuffer","Buffer","isBuffer","isImageMessage","image","msg","JSON","parse","sid","registered","includes","init","disconnect","connect","_temp2","_ref","_polling$interval","_ref$polling","polling","enabled","_ref$websocket","websocket","interval","_disconnectSocket","process","nextTick","_disconnectPolling","readyState","OPEN","error","clearInterval","key","get","window","GlobalCacheHub","_cached","KEY","Map","clear","value","CachedFn","ns","_options$expire_time","_options$enabled","expire_time_ms","cache_ns","expire_time","_defaultExpire","_proto2","reset","_hashArgs","stringify","warp","now","Date","argsHash","cacheKey","hit_cached","expire","result","body","recover","pact","s","_Pact","o","_settle","state","v","observer","onFulfilled","onRejected","_isSettledPact","thenable","ComfyUIApiClient","_ComfyUIWsClient","_cached_fn","_plugins","cache","_inheritsLoose","use","plugin","install","getExtensions","cached","getEmbeddings","getNodeDefs","resetCache","queuePrompt","queue_index","prompt","workflow","client_id","extra_data","extra_pnginfo","front","number","method","res","_result","text","error_resp","response","getItems","getQueue","getHistory","_this7","Running","queue_running","map","remove","cb","interrupt","Pending","queue_pending","max_items","_this8","_res$json2","History","values","getSystemStats","postApi","deleteItem","id","delete","clearItems","free","params","getUserConfig","_this15$fetchApi","createUser","username","getSettings","_this17$fetchApi","getSetting","encodeURIComponent","_this18$fetchApi","storeSettings","settings","storeSetting","getUserData","file","storeUserData","getSamplers","node_config","_node$input","node","input","required","getSchedulers","_node$input2","getSDModels","_node$input3","getCNetModels","_node$input4","getUpscaleModels","_node$input5","getHyperNetworks","_node$input6","getLoRAs","_node$input7","getVAEs","_node$input8","getPromptStatus","prompt_id","_ref2","running","some","task","_task$prompt","pending","_task$prompt2","done","getPromptOutputs","_ref3","item","find","status_str","outputs","getPromptImageResult","_this33","images","flatMap","node_output","filter","Boolean","waitForPrompt","polling_ms","_this34","prompt_status","_temp3","test","update","stage","shouldContinue","_resumeAfterTest","_resumeAfterBody","updateValue","_resumeAfterUpdate","_for","_this34$getPromptStat","waitForPromptWebSocket","_this35","output","offEvent2","offEvent","_step","_ref4$images","_iterator","_createForOfIteratorHelperLoose","_ref5","randomizePrompt","_i","_Object$values","class_type","inputs","seed","floor","pow","_enqueue_prompt","disable_random_seed","runPrompt","_this37","enqueue_polling","_this38","enqueue","_this39","progress","_data","finalizer","_finallyRethrows","_wasThrown","_result3","InvokedWorkflow","client","_task_id","_enqueue_req","executed","_this$workflow","load_result_data","_ref$images","_this2$client","_getPromptStatus","_this2$_task_id","wait","task_id","offs","forEach","deepClone","structuredClone","ComfyUIWorkflow","_workflow","_last_node_id","classes","_createClassesProxy","Proxy","target","p","receiver","from","_","end","invoke","invoked","instance","invoke_polling","_this$workflow2","ClientPlugin","hooks","_loop","hook","ins","original","addHook","LoginAuthPlugin","_ClientPlugin","urlObj","token"],"mappings":"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"}